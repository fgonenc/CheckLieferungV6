/*
 * frmEkle.java
 *
 * Created on 18. November 2008, 12:07
 */

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.DriverManager;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  f.gonenc
 */
public class frmEkle extends javax.swing.JFrame {
    /** Creates new form frmEkle */
    public frmEkle() {
        initComponents();

        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        int w = this.getSize().width;
        int h = this.getSize().height;
        int x = (dim.width-w)/2;
        int y = (dim.height-h)/2;
        this.setLocation(x, y);
    }

    //public void windowClosing(WindowEvent e) {
        //jButton4.doClick();
    //};
  
    private DefaultTableModel DefaultTableModel() {
        throw new UnsupportedOperationException("Not yet implemented");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jPopupMenu1 = new javax.swing.JPopupMenu();
    jMenuItem5 = new javax.swing.JMenuItem();
    jMenuItem6 = new javax.swing.JMenuItem();
    jMenuItem11 = new javax.swing.JMenuItem();
    jMenuItem12 = new javax.swing.JMenuItem();
    jSeparator4 = new javax.swing.JSeparator();
    jMenuItem14 = new javax.swing.JMenuItem();
    jMenuItem13 = new javax.swing.JMenuItem();
    jButton4 = new javax.swing.JButton();
    jLabel1 = new javax.swing.JLabel();
    jScrollPane1 = new javax.swing.JScrollPane();
    jTable1 = new javax.swing.JTable();
    jLabel2 = new javax.swing.JLabel();
    jComboBox1 = new javax.swing.JComboBox();
    jTextField1 = new javax.swing.JTextField();
    jButton5 = new javax.swing.JButton();
    jLabel3 = new javax.swing.JLabel();
    jButton3 = new javax.swing.JButton();
    jLabel4 = new javax.swing.JLabel();
    jMenuBar1 = new javax.swing.JMenuBar();
    jMenu1 = new javax.swing.JMenu();
    jSeparator2 = new javax.swing.JSeparator();
    jMenuItem3 = new javax.swing.JMenuItem();
    jMenu2 = new javax.swing.JMenu();
    jMenuItem1 = new javax.swing.JMenuItem();
    jMenuItem2 = new javax.swing.JMenuItem();
    jSeparator1 = new javax.swing.JSeparator();
    jMenuItem4 = new javax.swing.JMenuItem();
    jMenuItem9 = new javax.swing.JMenuItem();
    jSeparator3 = new javax.swing.JSeparator();
    jMenuItem10 = new javax.swing.JMenuItem();
    jMenu3 = new javax.swing.JMenu();
    jMenuItem8 = new javax.swing.JMenuItem();
    jMenuItem7 = new javax.swing.JMenuItem();

    jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, 0));
    jMenuItem5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calendarsmall.gif"))); // NOI18N
    jMenuItem5.setText("Heutige Daten anzeigen");
    jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jMenuItem5ActionPerformed(evt);
      }
    });
    jPopupMenu1.add(jMenuItem5);

    jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
    jMenuItem6.setText("Liste leeren");
    jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jMenuItem6ActionPerformed(evt);
      }
    });
    jPopupMenu1.add(jMenuItem6);

    jMenuItem11.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F11, 0));
    jMenuItem11.setText("Als HTML exportieren");
    jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jMenuItem11ActionPerformed(evt);
      }
    });
    jPopupMenu1.add(jMenuItem11);

    jMenuItem12.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F12, 0));
    jMenuItem12.setText("Tabelle mailen");
    jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jMenuItem12ActionPerformed(evt);
      }
    });
    jPopupMenu1.add(jMenuItem12);
    jPopupMenu1.add(jSeparator4);

    jMenuItem14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/info.gif"))); // NOI18N
    jMenuItem14.setText("Info über...");
    jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jMenuItem14ActionPerformed(evt);
      }
    });
    jPopupMenu1.add(jMenuItem14);

    jMenuItem13.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
    jMenuItem13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/exit.gif"))); // NOI18N
    jMenuItem13.setText("Beenden");
    jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jMenuItem13ActionPerformed(evt);
      }
    });
    jPopupMenu1.add(jMenuItem13);

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setTitle("Lieferung Applet - version 0.3");
    addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        formMouseClicked(evt);
      }
    });
    addWindowListener(new java.awt.event.WindowAdapter() {
      public void windowOpened(java.awt.event.WindowEvent evt) {
        formWindowOpened(evt);
      }
    });
    addWindowStateListener(new java.awt.event.WindowStateListener() {
      public void windowStateChanged(java.awt.event.WindowEvent evt) {
        formWindowStateChanged(evt);
      }
    });

    jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/exit.gif"))); // NOI18N
    jButton4.setText("Beenden");
    jButton4.setToolTipText("Anwendung beenden");
    jButton4.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton4ActionPerformed(evt);
      }
    });

    jLabel1.setForeground(new java.awt.Color(0, 102, 153));
    jLabel1.setText("jLabel1");

    jTable1.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {

      },
      new String [] {
        "Lieferdatum", "Transporter", "Absender", "Empfaenger", "Persoenlich", "Content", "Anzahl", "Datei", "Lieferscheinnummer", "Bemerkungen"
      }
    ) {
      Class[] types = new Class [] {
        java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
      };

      public Class getColumnClass(int columnIndex) {
        return types [columnIndex];
      }
    });
    jTable1.setToolTipText("Tabelleninhalt mailen = F12 drücken");
    jTable1.setColumnSelectionAllowed(true);
    jTable1.setInheritsPopupMenu(true);
    jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        jTable1MouseClicked(evt);
      }
    });
    jScrollPane1.setViewportView(jTable1);
    jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

    jLabel2.setText("Suche :");

    jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Lieferdatum", "Transporter", "Absender", "Empfaenger", "Persoenlich", "Content", "Anzahl", "Datei", "Lieferscheinnummer", "Bemerkungen" }));
    jComboBox1.addItemListener(new java.awt.event.ItemListener() {
      public void itemStateChanged(java.awt.event.ItemEvent evt) {
        jComboBox1ItemStateChanged(evt);
      }
    });
    jComboBox1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jComboBox1ActionPerformed(evt);
      }
    });

    jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyPressed(java.awt.event.KeyEvent evt) {
        jTextField1KeyPressed(evt);
      }
    });

    jButton5.setText("Abfrage ausführen");
    jButton5.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton5ActionPerformed(evt);
      }
    });

    jLabel3.setText("Spalte :");

    jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pdfsmall.gif"))); // NOI18N
    jButton3.setText("Lieferschein anzeigen");
    jButton3.setEnabled(false);
    jButton3.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton3ActionPerformed(evt);
      }
    });

    jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mgate.gif"))); // NOI18N
    jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseEntered(java.awt.event.MouseEvent evt) {
        jLabel4MouseEntered(evt);
      }
    });

    jMenu1.setText("Datei");
    jMenu1.add(jSeparator2);

    jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
    jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/exit.gif"))); // NOI18N
    jMenuItem3.setText("Beenden");
    jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jMenuItem3ActionPerformed(evt);
      }
    });
    jMenu1.add(jMenuItem3);

    jMenuBar1.add(jMenu1);

    jMenu2.setText("Aktionen");
    jMenu2.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jMenu2ActionPerformed(evt);
      }
    });

    jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, 0));
    jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calendarsmall.gif"))); // NOI18N
    jMenuItem1.setText("Heutige Daten anzeigen");
    jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jMenuItem1ActionPerformed(evt);
      }
    });
    jMenu2.add(jMenuItem1);

    jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
    jMenuItem2.setText("Liste leeren");
    jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jMenuItem2ActionPerformed(evt);
      }
    });
    jMenu2.add(jMenuItem2);
    jMenu2.add(jSeparator1);

    jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F11, 0));
    jMenuItem4.setText("Als HTML exportieren");
    jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jMenuItem4ActionPerformed(evt);
      }
    });
    jMenu2.add(jMenuItem4);

    jMenuItem9.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F12, 0));
    jMenuItem9.setText("Tabelle mailen");
    jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jMenuItem9ActionPerformed(evt);
      }
    });
    jMenu2.add(jMenuItem9);
    jMenu2.add(jSeparator3);

    jMenuItem10.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F8, 0));
    jMenuItem10.setText("Switch to Versandformular");
    jMenuItem10.setEnabled(false);
    jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jMenuItem10ActionPerformed(evt);
      }
    });
    jMenu2.add(jMenuItem10);

    jMenuBar1.add(jMenu2);

    jMenu3.setText("?");

    jMenuItem8.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
    jMenuItem8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/help.gif"))); // NOI18N
    jMenuItem8.setText("Hilfe");
    jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jMenuItem8ActionPerformed(evt);
      }
    });
    jMenu3.add(jMenuItem8);

    jMenuItem7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/info.gif"))); // NOI18N
    jMenuItem7.setText("Info über...");
    jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jMenuItem7ActionPerformed(evt);
      }
    });
    jMenu3.add(jMenuItem7);

    jMenuBar1.add(jMenu3);

    setJMenuBar(jMenuBar1);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 909, Short.MAX_VALUE)
          .addGroup(layout.createSequentialGroup()
            .addComponent(jLabel4)
            .addGap(273, 273, 273)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jLabel2)
              .addComponent(jLabel3))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(layout.createSequentialGroup()
                .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE))
              .addComponent(jComboBox1, 0, 437, Short.MAX_VALUE)))
          .addGroup(layout.createSequentialGroup()
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 176, Short.MAX_VALUE)
            .addComponent(jButton3)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jButton4)))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(jLabel3)
              .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(jLabel2)
              .addComponent(jButton5)
              .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
          .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(jButton4)
            .addComponent(jButton3))
          .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap())
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
// Schliessen
    System.exit(0);
}//GEN-LAST:event_jButton4ActionPerformed

public String getAppletInfo() {
    return "Lieferungskontrolle Applet, Version 0.2\n"
        + "by francois";
}

public static boolean isWindows() {
    String os = System.getProperty("os.name");
        if ( os != null && os.startsWith("Windows")) {
        return true;
    } else {
        return false;
    }
}

private void formWindowStateChanged(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowStateChanged
}//GEN-LAST:event_formWindowStateChanged

private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
  Date today = new Date();
  DateFormat dfm = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
  String strDate = (dfm.format(today).toString());

  /*
  Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        int w = this.getSize().width;
        int h = this.getSize().height;
        int x = (dim.width-w)/2;
        int y = (dim.height-h)/2;
        this.setLocation(x, y);
  */
  jTextField1.setText(String.valueOf(strDate));

  jTextField1.requestFocus();
  jMenuItem1.doClick();
  // Wenn Table leer ist dann melden
  int intRow = jTable1.getRowCount();
  jLabel1.setText("Heute geliefert: "+ String.valueOf(intRow));
}//GEN-LAST:event_formWindowOpened

private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
// TODO add your handling code here:
    String strJCB = jComboBox1.getSelectedItem().toString();
    if (strJCB.equals("Lieferdatum")) {
          Date today = new Date();
          DateFormat dfm = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
          String strDate = (dfm.format(today));
          jTextField1.setText(String.valueOf(strDate));
    }
    else if (strJCB.equals("Datei")) {
          jTextField1.setText("%.PDF");
    }
    else if (strJCB.equals("Content")) {
          jTextField1.setText("%CISCO%");
    }else{
          jTextField1.setText("");
    }

}//GEN-LAST:event_jComboBox1ItemStateChanged

private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_jComboBox1ActionPerformed

private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // Clear Rows
        clearRows1();
        // Dialog Abfrage ausfuehren
        Connection Abfc = null;
        Statement Abfstmnt = null;
        Date today = new Date();
        // DateFormat dfm = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        //DateFormat dfm = new SimpleDateFormat("dd-MM-yyyy EEEEE");
        DateFormat myDate = new SimpleDateFormat("yyyy-MM-dd 00:00:00");
        //dfm.setTimeZone(TimeZone.getTimeZone("Europe/Berlin"));
        //jLabel1.setText("Heute : "+ dfm.format(now));
        String myStr = (myDate.format(today).toString());
        String strSw = jComboBox1.getSelectedItem().toString();
        if (strSw != "Lieferdatum") {
        try {
            Class.forName( "sun.jdbc.odbc.JdbcOdbcDriver" );
            Abfc = DriverManager.getConnection( "jdbc:odbc:DSNgeliefertxls", "", "" );
            Abfstmnt = Abfc.createStatement();
            //String Abfquery = "select Lieferdatum, Transporter, Absender, Empfaenger, Persoenlich, Content, Anzahl, AuftragNr, LieferscheinNr, Bemerkungen from [Tabelle$] WHERE Lieferdatum=#" + jLabel1.getText() + "#;";
            
            String Abfquery = "select Lieferdatum, Transporter, Absender, Empfaenger, Persoenlich, Content, Anzahl,	Datei, Lieferscheinnummer, Bemerkungen from [Tabelle$] WHERE "+ jComboBox1.getSelectedItem()+" LIKE '" + "%" +jTextField1.getText()+ "%" + "';";
            ResultSet rs = Abfstmnt.executeQuery( Abfquery );
            
                while( rs.next() )            {
                String strLieferdatum=(rs.getString( "Lieferdatum" )); 
                String strTransporter=(rs.getString( "Transporter" ));
                String strAbsender=(rs.getString( "Absender" ));
                String strEmpfaenger=(rs.getString( "Empfaenger" ));
                String boolPersoenlich =(rs.getString( "Persoenlich" ));
                String strContent =(rs.getString( "Content" ));
                String strAnzahl =(rs.getString( "Anzahl" ));
                String strDatei =(rs.getString( "Datei" ));
                String intLieferschein =(rs.getString( "Lieferscheinnummer" ));
                String strBemerkungen =(rs.getString( "Bemerkungen" ));
                ((DefaultTableModel)jTable1.getModel()).addRow(new Object[] {strLieferdatum,strTransporter,strAbsender,strEmpfaenger,boolPersoenlich,strContent,strAnzahl, strDatei ,intLieferschein, strBemerkungen});

                }
            }
         
        catch( Exception e )
        {
            System.err.println( e );
        }
        finally
        {
            try
            {
                Abfstmnt.close();
                Abfc.close();
            }
            catch( Exception e )
            {
                System.err.println( e );
            }
        }
        }
        else {
        try {
            Class.forName( "sun.jdbc.odbc.JdbcOdbcDriver" );
            Abfc = DriverManager.getConnection( "jdbc:odbc:DSNgeliefertxls", "", "" );
            Abfstmnt = Abfc.createStatement();
            //String Abfquery = "select Lieferdatum, Transporter, Absender, Empfaenger, Persoenlich, Content, Anzahl,	LieferscheinNr,	Bemerkungen from [Tabelle$] WHERE Lieferdatum=#" + jLabel1.getText() + "#;";
            String Abfquery = "select Lieferdatum, Transporter, Absender, Empfaenger, Persoenlich, Content, Anzahl, Datei, Lieferscheinnummer, Bemerkungen from [Tabelle$] WHERE "+ jComboBox1.getSelectedItem()+">#" + jTextField1.getText() + "#;";
            ResultSet rs = Abfstmnt.executeQuery( Abfquery );
            
                while( rs.next() )            {
                String strLieferdatum=(rs.getString( "Lieferdatum" )); 
                String strTransporter=(rs.getString( "Transporter" ));
                String strAbsender=(rs.getString( "Absender" ));
                String strEmpfaenger=(rs.getString( "Empfaenger" ));
                String boolPersoenlich =(rs.getString( "Persoenlich" ));
                String strContent =(rs.getString( "Content" ));
                String strAnzahl =(rs.getString( "Anzahl" ));
                String strAuftrag =(rs.getString( "Datei" ));
                String intLieferschein =(rs.getString( "Lieferscheinnummer" ));
                String strBemerkungen =(rs.getString( "Bemerkungen" ));
                ((DefaultTableModel)jTable1.getModel()).addRow(new Object[] {strLieferdatum,strTransporter,strAbsender,strEmpfaenger,boolPersoenlich,strContent,strAnzahl,strAuftrag,intLieferschein,strBemerkungen});

                }
            }
         
        catch( Exception e )
        {
            System.err.println( e );
        }
        finally
        {
            try
            {
                Abfstmnt.close();
                Abfc.close();
            }
            catch( Exception e )
            {
                System.err.println( e );
            }
        } 
        }
        
   // bulunanlari bildir
   int strFound = ((DefaultTableModel)jTable1.getModel()).getRowCount();
   jLabel1.setText("gefunden: "+ String.valueOf(strFound));
        
}//GEN-LAST:event_jButton5ActionPerformed

private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
 // popup anzeigen right mouse
  if(evt.getButton()==evt.BUTTON1) {
  
  int col = jTable1.getSelectedColumn();
  int row = jTable1.getSelectedRow();
  try {
   //Eger secilmisse ve secim DATEI kolonu dahilindeyse (gerisi beni ilgilendirmiyor)
   if(jTable1.getSelectedRowCount()>-1) {
     
                String gSel = jTable1.getModel().getValueAt(row, col).toString();
                // buraya switch koy
                if(gSel.endsWith(".PDF")){
                    jButton3.setEnabled(true);
                    jLabel1.setText("Lieferschein " + gSel + " gewählt. Button aktiviert.");
                    //Btn uzerinde dosya ismi
                    //jButton3.setText(gSel);
                    setTitle("Lieferung Applet - "+gSel);
                //return;
                }
                else
                {
                    jButton3.setText("Lieferschein anzeigen");
                    jButton3.setEnabled(false);
                    jLabel1.setText("Spalte DATEI enthält Lieferscheine. "+
                       "Kein Lieferschein gewählt!");
                    setTitle("Lieferung Applet - "+gSel);
                    //jTable1.setToolTipText(gSel);
                }

                }  
   }catch (NullPointerException e1) {
       jLabel1.setText(e1+"...Schwerwiegend. Leere Wahl !!!");
   }
  }
}//GEN-LAST:event_jTable1MouseClicked

private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
    // Hier popup anzeigen
    // setTitle("Lieferung Applet - version 0.3");
    if (evt.getButton()==evt.BUTTON3) {
         jPopupMenu1.show(evt.getComponent(), evt.getX(),evt.getY());

    }

}//GEN-LAST:event_formMouseClicked

public void clearRows1() {
         // Clear Rows
         int numRows = ((DefaultTableModel)jTable1.getModel()).getRowCount();
         if(numRows > 0) {
            for(int i = numRows-1; i>=0; i--)
            {
                //defaultTableModel.removeRow(i);
                ((DefaultTableModel)jTable1.getModel()).removeRow(((DefaultTableModel)jTable1.getModel()).getRowCount()-1);
            }
        }
            // bulunanlari bildir
   int strFound = ((DefaultTableModel)jTable1.getModel()).getRowCount();
   jLabel1.setText("gefunden: "+ String.valueOf(strFound));
}
    

private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
// Enter on TextField
  String txtField1 =jTextField1.getText();
  //if(evt.getKeyCode()==10 && ... de olabilir
  if(evt.getKeyCode()==evt.VK_ENTER && !(txtField1.equals(""))){
    jButton5.doClick();
  }  else {
      //VK Key 10 basildi ve alan dolu degil
  }
}//GEN-LAST:event_jTextField1KeyPressed

private void Beeper() {
    Toolkit.getDefaultToolkit().beep();
}

private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
    // info über
   NewJDialog dialog = new NewJDialog(this, rootPaneCheckingEnabled);
   dialog.setVisible(true);
}//GEN-LAST:event_jMenuItem7ActionPerformed

private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
    // Beenden
    jButton4.doClick();
}//GEN-LAST:event_jMenuItem3ActionPerformed

private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
    // Hilfe
      JOptionPane.showMessageDialog(null, "Tips: \n\n"+
        "Datum suche ist immer ab Datum in Format yyyy MM dd HH:mm:ss \n"+
        "Beispielweise Lieferdatum Spalte wählen, in Suchfeld 2008-12-10 21:00:00 eingeben.\n"+
        "Eingabetaste drücken. Ab 2008-12-10 21:00:00 wird gesucht.\n\n"+
        "In Textsuche % verwenden. Das bedeutet alle Einträge.\n"+
        "Beispielweise, Spalte wählen, in Suchfeld A% geben und Eingabe Taste drücken.\n"+
        "Alle mit A beginnen werden gesucht.\n\nHeutige Daten zu anzeigen bitte drücken Sie F4 Taste.\n\n",
        "Hilfe",
        JOptionPane.INFORMATION_MESSAGE);
}//GEN-LAST:event_jMenuItem8ActionPerformed

private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
    // TODO add your handling code here:
    jMenuItem1.doClick();
}//GEN-LAST:event_jMenu2ActionPerformed

private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
    // menu - Liste leeren
    clearRows1();
}//GEN-LAST:event_jMenuItem2ActionPerformed

private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
    // TODO add your handling code here:
    clearRows1();
    // SQL und Date anzeigen
    Connection c = null;
    Statement stmnt = null;
    Date today = new Date();
    // DateFormat dfm = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
    //DateFormat d = new SimpleDateFormat("yyyy-MM-dd");
    DateFormat myDate = new SimpleDateFormat("yyyy-MM-dd");
    //dfm.setTimeZone(TimeZone.getTimeZone("Europe/Berlin"));
    //jLabel1.setText("Heute : "+ dfm.format(now));
    String myStr = (myDate.format(today).toString());

    try {
        Class.forName( "sun.jdbc.odbc.JdbcOdbcDriver" );
        c = DriverManager.getConnection( "jdbc:odbc:DSNgeliefertxls", "", "" );
        stmnt = c.createStatement();
        //String query = "select Lieferdatum, Transporter, Absender, Empfaenger, Persoenlich, Content, Anzahl,	LieferscheinNr,	Bemerkungen, Ind from [Tabelle$] where Ind='HEUTE';";
        String query = "select Lieferdatum, Transporter, Absender, Empfaenger, Persoenlich, Content, Anzahl, Datei, Lieferscheinnummer, Bemerkungen from [Tabelle$] WHERE Lieferdatum>#" + myStr + "#;";
        ResultSet rs = stmnt.executeQuery( query );
        //System.out.println( ":" );

        while( rs.next() )            {
            String strLieferdatum=(rs.getString( "Lieferdatum" ));
            String strTransporter=(rs.getString( "Transporter" ));
            String strAbsender=(rs.getString( "Absender" ));
            String strEmpfaenger=(rs.getString( "Empfaenger" ));
            String boolPersoenlich =(rs.getString( "Persoenlich" ));
            String strContent =(rs.getString( "Content" ));
            String strAnzahl =(rs.getString( "Anzahl" ));
            String strDatei =(rs.getString( "Datei" ));
            String intLieferschein =(rs.getString( "Lieferscheinnummer" ));
            String strBemerkungen =(rs.getString( "Bemerkungen" ));
            ((DefaultTableModel)jTable1.getModel()).addRow(new Object[] {strLieferdatum,strTransporter,strAbsender,strEmpfaenger,boolPersoenlich,strContent,strAnzahl, strDatei, intLieferschein, strBemerkungen});
        }
    } catch( Exception e ) {
        System.err.println( e );
    } finally {
        try {
            stmnt.close();
            c.close();
        } catch( Exception e ) {
            System.err.println( e );
        }
    }
    jTextField1.requestFocus();

    // Wenn Table leer ist dann melden
    int intRow = jTable1.getRowCount();
    jLabel1.setText("Heute geliefert: "+ String.valueOf(intRow));
}//GEN-LAST:event_jMenuItem1ActionPerformed


private void PDFstarten() {
   int col = jTable1.getSelectedColumn();
   int row = jTable1.getSelectedRow();
   String pfa = "file://X:/F.GONENC/Lieferung/PDF/";
   //fg  make xml file to store pfa Variabel
   String gSel = jTable1.getModel().getValueAt(row, col).toString();

   if(gSel!=null | gSel.endsWith(".PDF")) {
         try {
            if (isWindows()) {
            Runtime.getRuntime().exec( "rundll32 url.dll,FileProtocolHandler " + pfa + gSel );
   } else {
            Runtime.getRuntime().exec("firefox " + pfa + gSel);
        }
        } catch (IOException e) {
        e.printStackTrace();
        }
   }
}

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    // pdf
    PDFstarten();
}//GEN-LAST:event_jButton3ActionPerformed

private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
    // email senden
    if (jTable1.getRowCount() >8) {
        JOptionPane.showMessageDialog(this, "Aktuelle Zeilenanzahl ist : "+
                jTable1.getRowCount() +
                " \n Mehr als 8 Zeilen als Email exportieren ist nicht erlaubt.\n\n" +
                "Bitte als HTML exportieren.\n\n","Warnung!"
                ,JOptionPane.INFORMATION_MESSAGE);
        return;
    }

    Date today = new Date();
    DateFormat myDate = new SimpleDateFormat("yyyy-MM-dd 00:00:00");
    String myStr = (myDate.format(today).toString());

    try {
        String str0 = "";
        String str1 = "";
        String str2 = "";
        String str5 = "";
        String str7 = "";
        String strIn = "";
        String pfa2 = "file://X:/F.GONENC/Lieferung/PDF/";

        for (int i = 0; i < jTable1.getRowCount(); i++) {
            //for (int c = 0; c < 3; c++) {
                str0 = jTable1.getValueAt(i,0).toString();
                strIn = strIn + "%0A" + str0;

                str1 = jTable1.getValueAt(i,1).toString();
                strIn = strIn + "%0A" + "TR:%20" + str1;

                str2 = jTable1.getValueAt(i,2).toString();
                strIn = strIn + "%0A" + "Von:%20" + str2;

                str7 = jTable1.getValueAt(i,7).toString();
                strIn = strIn + "%0A" + pfa2 + str7;


                str5 = jTable1.getValueAt(i,5).toString();
                strIn = strIn + "%0A" + "Inhalt:%20" + str5 +
                        "%0A";
            //}
        }
        jLabel1.setText("Info: Email body ist bis zu 2048 Buchstaben begrenzt.");
        
        Process p = Runtime.getRuntime().exec("cmd.exe /c start" +
  " \"title\" \"mailto:c.koch@abs.st?subject=Info%20Lieferung%20-Automated%20Email-%20"+ myStr +"&body=" + strIn +".");
        // Bosluk ve satir "LIEFERUNG%20INFO%0A========
        int exitVal = p.waitFor();
        System.out.println("ExitValue: " + exitVal);        
        
        System.out.println(p.exitValue());
        //int iPex = p.exitValue();
        //jLabel1.setText(iPex);
        //JOptionPane.showMessageDialog(null, "See above...","Exit Value: "+p.exitValue(),JOptionPane.INFORMATION_MESSAGE);
        p.waitFor();
        
        }
        catch(Exception err) {
          err.printStackTrace();
        }
        
}//GEN-LAST:event_jMenuItem9ActionPerformed

private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
    // HTML
    
    Date today = new Date();
    DateFormat myDate = new SimpleDateFormat("yyyy-MM-dd 00:00:00");
    String myStr = (myDate.format(today).toString()); 

    try {
        String str0 = "";
        String str1 = "";
        String str2 = "";
        String str5 = "";
        String str7 = "";
        String strIn = "";
        String pfa2 = "file://X:/F.GONENC/Lieferung/PDF/";

        for (int i = 0; i < jTable1.getRowCount(); i++) {
        //for (int c = 0; c < 3; c++) {
        str0 = jTable1.getValueAt(i,0).toString();
        strIn = strIn + str0 + "\n<br>\n" ;

        str1 = jTable1.getValueAt(i,1).toString();
        strIn = strIn + "TR: " + str1 + "\n<BR>\n";

        str2 = jTable1.getValueAt(i,2).toString();
        strIn = strIn + "Von: " + str2 + "\n<BR>\n";

        str7 = jTable1.getValueAt(i,7).toString();
        strIn = strIn + "<a href=\"" + pfa2 + str7 + "\">" + pfa2 + str7 + "</a>" +"\n<br>";

        str5 = jTable1.getValueAt(i,5).toString();
        strIn = strIn + "Inhalt: " + str5 + "<BR><BR>\n";
            
        }

        /*   test-----.txt e gore formatla
        // http://java.sun.com/javase/6/docs/technotes/guides/intl/encoding.doc.html
        JOptionPane.showMessageDialog(this, "Datei ergebnis.htm ist auf "+ currentDir +" gespeichert.\n", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
        catch ( IOException e ) {
            System.out.println( "Konnte Datei nicht erstellen" );
        }
        */
        
        FileWriter fw = null;

        fw = new FileWriter( "result.html" );
        
        fw.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\"><HTML><HEAD><TITLE></TITLE>" );
        fw.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">");
        fw.write("</head><body bgcolor=\"#FFFFFF\">\n");
        fw.write(strIn);
        
        fw.write("\n</body></html>");
        fw.close();
        }
        catch ( IOException e ) {
        System.out.println( "Konnte Datei nicht erstellen" );
        }
        //JOptionPane.showMessageDialog(this, "Datei result.htm ist gespeichert.\n", "Information", JOptionPane.INFORMATION_MESSAGE);
        NewJDialog2 dialog2 = new NewJDialog2(this, rootPaneCheckingEnabled);
        dialog2.setVisible(true);
    
}//GEN-LAST:event_jMenuItem4ActionPerformed

private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
    // TODO add your handling code here:
    try {
      String line;
      Process pSW = Runtime.getRuntime().exec("java -jar \"X:\\F.GONENC\\Versand\\Versand.jar\"");
      pSW.waitFor();
      System.out.println(pSW.exitValue());
      
    }
    catch (Exception err) {
      err.printStackTrace();
    }
}//GEN-LAST:event_jMenuItem10ActionPerformed

private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
    // heutige Daten anzeigen
    jMenuItem1.doClick();
}//GEN-LAST:event_jMenuItem5ActionPerformed

private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
    // Liste leeren
    jMenuItem2.doClick();
}//GEN-LAST:event_jMenuItem6ActionPerformed

private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
    // als html export
    jMenuItem4.doClick();
}//GEN-LAST:event_jMenuItem11ActionPerformed

private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
    // Tabelle mailen
    jMenuItem9.doClick();
}//GEN-LAST:event_jMenuItem12ActionPerformed

private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
    // quit
    jMenuItem3.doClick();
}//GEN-LAST:event_jMenuItem13ActionPerformed

private void jLabel4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseEntered
    // on mgate mouse entered

}//GEN-LAST:event_jLabel4MouseEntered

private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
    // info uber
    jMenuItem7.doClick();
}//GEN-LAST:event_jMenuItem14ActionPerformed
  
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    //setDefaultLookAndFeelDecorated(true);
                    UIManager.setLookAndFeel("com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel");
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(frmEkle.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(frmEkle.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(frmEkle.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(frmEkle.class.getName()).log(Level.SEVERE, null, ex);
                }
             new frmEkle().setVisible(true);
            }
        });
    }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton jButton3;
  private javax.swing.JButton jButton4;
  private javax.swing.JButton jButton5;
  private javax.swing.JComboBox jComboBox1;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JMenu jMenu1;
  private javax.swing.JMenu jMenu2;
  private javax.swing.JMenu jMenu3;
  private javax.swing.JMenuBar jMenuBar1;
  private javax.swing.JMenuItem jMenuItem1;
  private javax.swing.JMenuItem jMenuItem10;
  private javax.swing.JMenuItem jMenuItem11;
  private javax.swing.JMenuItem jMenuItem12;
  private javax.swing.JMenuItem jMenuItem13;
  private javax.swing.JMenuItem jMenuItem14;
  private javax.swing.JMenuItem jMenuItem2;
  private javax.swing.JMenuItem jMenuItem3;
  private javax.swing.JMenuItem jMenuItem4;
  private javax.swing.JMenuItem jMenuItem5;
  private javax.swing.JMenuItem jMenuItem6;
  private javax.swing.JMenuItem jMenuItem7;
  private javax.swing.JMenuItem jMenuItem8;
  private javax.swing.JMenuItem jMenuItem9;
  private javax.swing.JPopupMenu jPopupMenu1;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JSeparator jSeparator1;
  private javax.swing.JSeparator jSeparator2;
  private javax.swing.JSeparator jSeparator3;
  private javax.swing.JSeparator jSeparator4;
  private javax.swing.JTable jTable1;
  private javax.swing.JTextField jTextField1;
  // End of variables declaration//GEN-END:variables

}
